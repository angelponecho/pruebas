{% extends '::base.html.twig' %}

{% block body -%}
<div class="container">
    <div class="row-fluid">
	<h1> QUE ES TWIG</h1>
	<p>Se trata de un motor de plantillas libre para el lenguaje PHP</p>
	<h2> LO BASICO DE TWIG</h2>
	    <pre>{% verbatim %}
			{# comentario #}
			{{ mostrar_algo }}
			{% hacer algo %}
	{% endverbatim %}</pre>

	<h2>VARIABLES</h2>
  	<p>Las declaramos con <strong>set</strong> </p>
		<pre>{% verbatim %}
			{% set variable = 'foo' %}
			{% set variable = [1, 2] %}
			{% set variable %}&ltdiv id="pagination"&gt...&lt/div &gt{% endset %}
		{% endverbatim %}</pre>
	<p> y luego las llamamos con las llaves</p>

	<pre>{% verbatim %}
			{{ variable }}
	{% endverbatim %}</pre>

	<h2>FILTROS</h2>
  	<p>Los filtros pueden modificar variables. Los filtros están separados de la variable por un símbolo de tubo (|)</p>
	<pre>{% verbatim %}
		{{ variable | lower }} {# convierte a minúsculas la cadena #}
		{{ variable | title }} {# pone en mayuscula cada palabra de la cadena #}
		{{ variable | date("m/d/Y", "Europe/Paris") }}
		{% filter upper %} Todo el texto de aquí será convertido a mayúsculas{% endfilter %}
	{% endverbatim %}</pre>

        <h2>FUNCIONES</h2>
        <p> Generan contenido. Las funciones son llamadas por su nombre seguido de paréntesis (). Algunos eejmplos son :<br>
            <ul>
                <li> <strong>range</strong>Devuelve una lista conteniendo una progresión aritmética de entero <br>
                <pre>{% verbatim %}
		                {% for i in range(0, 3) %}
                            {{ i }},
                         {% endfor %}
	            {% endverbatim %}</pre>
                </li>
                <li> <strong>cycle</strong>a recorrer un array de valores<br>
                    <pre>{% verbatim %}
                            {% set frutas = [’manzana’, ’naranja’, ’cítricos’] %}
                                {% for i in 0..10 %}
                                    {{ cycle(frutas, i) }}
                                {% endfor %}
                    {% endverbatim %}</pre>
                <li> <strong>Otras</strong>block,constant, atribute... <br>
                </li>
            </ul>


            </p>


	<h2>OPERACIONES, LÓGICA, COMPARACIONES, OPERADOR DE CONTENCION</h2>
	<p>Twig te permite calcular valores (+-/...)</p>
	<pre>{% verbatim %}{{ 1 + 1 }} is 2.{% endverbatim %}</pre>
	<p>combinar varias expresiones con los siguientes operadores : and ,or ,not y  comparaciones:==, !=, <, >, >=, y <=</p>
	<pre>{% verbatim %}{% if temperatura > 18 and temperatura < 27 %}
    		<p>Hece un dia cojonudo pa ir a comer al parque.</p>
		{% endif %}.
	{% endverbatim %}</pre>

	<h2>ESTRUCTURAS DE CONTROL</h2>
  	<p>Condicionales ( if/elseif/else), bucles for, así como cosas tales como bloques. Las estructuras de control aparecen dentro de bloques { % ... % }.</p>
	<h3>IF -ELSE</h3>
	<pre>{% verbatim %}
		{% if temperatura > 18 and temperatura < 27 %}
    		<p>Hece un dia cojonudo pa ir a comer al parque.</p>
		{% endif %}
	{% endverbatim %}</pre>
	<h3>FOR</h3>
	<p>Si necesitas  una secuencia de números, se usa el operador ..</p>
	<pre>{% verbatim %}
		{% for i in 0..10 %}
    		* {{ i }}
		{% endfor %}
	{% endverbatim %}</pre>
	<h3>FOR e IF</h3>
	<p>Si necesitas  una secuencia de números, se usa el operador ..</p>
	<pre>{% verbatim %}
		<ul>
    		{% for user in users if user.active %}
        	<li>{{ user.username|e }}</li>
    		{% endfor %}
		</ul>
	{% endverbatim %}</pre>

    <h2>MACROS</h2>
    <p>Las macros son comparables con funciones en lenguajes de programación.Las macros se pueden definir en cualquier plantilla, y es necesario «importarlas» </p>
	<pre>{% verbatim %}
		{% macro input(name, value, type, size) %}
            <input type="{{ type }}"
                   name="{{ name }}"
                   value="{{ value }}"
                   size="{{ size }}" />
        {% endmacro %}
    {% endverbatim %}
    </pre>


	<h2>IMPORT, INCLUDE Y HERENCIA ENTRE PLANTILLAS</h2>
     <p>Import es para "importar macros" Ej:  Ej{% verbatim %}{% import "formularios.html" as forms %}{% endverbatim %}Include sirve para incluir plantillas. Ej{% verbatim %}{% include ’sidebar.html’ %}{% endverbatim %} (la plantilla incliuda puede acceder al padre)</p>
	<p>permite crear un modelo de <strong>plantilla base</strong> que contenga todos los elementos comunes del sitio y definir los bloques que las <strong>plantillas descendientes</strong> pueden sustituir.</p>
	<h3>EJEMPLO PLANTILLA BASE</h3>
	<pre>{% verbatim %}
			&lthtml&gt
				&lthea&gt
					{% block head %}{% endblock %}
				&lt/head&gt
				&lttbody&gt
					&ltdiv id="content"&gt
					  {% block content %}{% endblock %}
					&lt/div&gt
				&lt/body&gt
			&lt/html&gt
	{% endverbatim %}</pre>
	<h3>EJEMPLO PLANTILLA DESCENDIENTE</h3>
	<pre>{% verbatim %}
			{% extends "base.html" %}
				{% block head %}
					{{ parent() }}
            &ltscript type="text/javascript" src="jquery.min.191.js"&gt&lt/script&gt
				{% endblock %}

				{% block content %}
            &lth1&gtÍndice&gt/h1&gt
            &ltp&gtHola mundo!&gt/p&gt
				{% endblock %}
	{% endverbatim %}</pre>

</div>

<div class="row-fluid">
	<h2>Ejemplo de funcionamiento con Symfony</h2>


    <div class="row-fluid top-buffer">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Fecha</th>
                <th>Actividad</th>
                <th>Horas</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            {% for entity in entities %}
                <tr>
                    <td>{% if entity.occurrenceDate %}{{ entity.occurrenceDate|date('Y-m-d') }}{% endif %}</td>
                    <td>{{ entity.activity }}</td>
                    <td>{{ entity.hours }}</td>
                    <td>
                        <ul>
                            <div class="span3">
                                <a href="{{ path('workoutcrud_show', { 'id': entity.id }) }}" class="btn btn-large btn-block btn-default">Ver</a>
                            </div>
                            <div class="span3">
                                <a href="{{ path('workoutcrud_edit', { 'id': entity.id }) }}" class="btn btn-large btn-block btn-inverse">Editar</a>
                            </div>
                        </ul>git
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
    <div class="row top-buffer">
        <div class="span3">
            <a href="{{ path('workoutcrud_new') }}" class="btn btn-large btn-block btn-primary">New Trabajo</a>
        </div>
    </div>
</div>
</div>
{% endblock %}

